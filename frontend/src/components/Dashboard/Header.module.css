@import url('https://fonts.googleapis.com/css2?family=Outfit:wght@300;400;500;600;700&display=swap'); /* Changed to Outfit */

body {
  /* This body rule should ideally be in your global CSS (e.g., index.css) */
  font-family: 'Outfit', sans-serif; /* Consistent font family */
  margin: 0;
  background-color: var(--background-root); /* Use global root background variable */
  transition: background-color 0.3s ease; /* Smooth transition for theme change */
}

/* --- Header Container --- */
.headerContainer {
  /* Use background-secondary for header, which adapts to theme */
  background-color: var(--background-secondary);
  /* Use shadow variable for consistency */
  box-shadow: var(--shadow-color-header); /* New variable recommended for header shadow */
  padding: 1rem 1.5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-radius: 0 0 1rem 1rem;
  position: relative;
  z-index: 10;
  transition: background-color 0.3s ease, box-shadow 0.3s ease; /* Smooth transitions */
}

.headerLeft {
  display: flex;
  align-items: center;
  gap: 1rem;
}

/* --- Menu Button (for Sidebar Toggle) --- */
.menuButton {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.75rem;
  /* Use text-muted, which adapts */
  color: var(--text-muted);
  transition: color 0.2s ease, background-color 0.2s ease, transform 0.2s ease;
  border-radius: 0.5rem;
  display: none;
}

.menuButton:hover {
  /* Use text-primary for hover color, which adapts */
  color: var(--text-primary);
  /* Use background-hover-light or background-muted, which adapts */
  background-color: var(--background-muted);
  transform: scale(1.05);
}

.menuButton:focus {
  outline: none;
  /* Use primary-blue for focus ring, with a new focus shadow variable */
  box-shadow: 0 0 0 3px var(--primary-blue-focus-shadow); /* Use a defined variable */
}

@media (max-width: 1023px) {
  .menuButton {
    display: block;
  }
}

/* --- Greeting Text --- */
.greeting {
  font-size: 1.625rem;
  font-weight: 600;
  /* Use text-primary, which adapts */
  color: var(--text-primary);
  line-height: 1.2;
  margin: 0;
}

@media (max-width: 767px) {
  .greeting {
    font-size: 1.3rem;
  }
}

/* --- Role Badge --- */
.roleBadge {
  display: inline-block;
  /* Use primary-blue, which adapts */
  background-color: var(--primary-blue);
  /* Use text-light, which adapts (white/light gray) */
  color: var(--text-light);
  padding: 0.2rem 0.6rem;
  border-radius: 0.375rem;
  font-size: 0.7rem;
  font-weight: 500;
  margin-left: 0.75rem;
  vertical-align: middle;
  /* Use shadow variable for consistency, primary action specific */
  box-shadow: 0 2px 4px var(--shadow-color-primary-action);
}

/* --- Notifications Area --- */
.notificationsWrapper {
  position: relative;
}

.notificationsButton {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.75rem;
  border-radius: 9999px;
  transition: background-color 0.2s ease, box-shadow 0.2s ease, transform 0.2s ease;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

.notificationsButton:hover {
  /* Use background-muted, which adapts */
  background-color: var(--background-muted);
  transform: scale(1.05);
}

.notificationsButton:focus {
  outline: none;
  /* Use primary-blue for focus ring, with a new focus shadow variable */
  box-shadow: 0 0 0 3px var(--primary-blue-focus-shadow);
}

.bellIcon {
  /* Use primary-blue, which adapts */
  color: var(--primary-blue);
}

.unreadBadge {
  position: absolute;
  top: 0px;
  right: 0px;
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 20px;
  height: 20px;
  padding: 0 6px;
  font-size: 0.75rem;
  font-weight: 700;
  line-height: 1;
  /* Use text-light, which adapts */
  color: var(--text-light);
  /* Use error-red, which adapts */
  background-color: var(--error-red);
  border-radius: 9999px;
  /* Use background-secondary for the border, which adapts */
  border: 2px solid var(--background-secondary);
  transform: translate(25%, -25%);
  /* Use shadow variable for consistency, error specific */
  box-shadow: 0 2px 4px var(--shadow-color-error); /* New variable recommended */
}

/* --- Notifications Dropdown --- */
.notificationsDropdown {
  position: absolute;
  right: 0;
  margin-top: 0.75rem;
  width: 24rem;
  max-width: 95vw;
  /* Use background-secondary, which adapts */
  background-color: var(--background-secondary);
  /* Use border-light, which adapts */
  border: 1px solid var(--border-light);
  border-radius: 0.75rem;
  /* Use shadow variable for consistency, more pronounced */
  box-shadow: var(--shadow-color-dropdown); /* New variable recommended for dropdowns */
  z-index: 50;
  overflow: hidden;
  animation: fadeInScale 0.2s ease-out;
  min-width: 200px;
  transition: background-color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease; /* Smooth transitions */
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.95) translateY(-10px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

.dropdownHeader {
  padding: 1rem 1.25rem;
  /* Use border-light, which adapts */
  border-bottom: 1px solid var(--border-light);
  /* Use background-muted, which adapts */
  background-color: var(--background-muted);
  display: flex;
  justify-content: space-between;
  align-items: center;
  transition: background-color 0.3s ease; /* Smooth transition */
}

.dropdownTitle {
  font-weight: 700;
  /* Use text-primary, which adapts */
  color: var(--text-primary);
  font-size: 1.125rem;
  margin: 0;
}

/* --- Notification List --- */
.notificationList {
  max-height: 350px;
  overflow-y: auto;
  list-style: none;
  margin: 0;
  padding: 0;
}

/* Custom scrollbar for better aesthetics */
.notificationList::-webkit-scrollbar {
  width: 8px;
}

.notificationList::-webkit-scrollbar-track {
  /* Use a background variable for scrollbar track */
  background: var(--background-muted);
  border-radius: 10px;
}

.notificationList::-webkit-scrollbar-thumb {
  /* Use a background variable for scrollbar thumb */
  background: var(--border-light);
  border-radius: 10px;
}

.notificationList::-webkit-scrollbar-thumb:hover {
  /* Use a background variable for scrollbar thumb hover */
  background: var(--text-muted);
}


.notificationItem {
  padding: 0.9rem 1.25rem;
  /* Use a subtle border variable for item separation */
  border-bottom: 1px solid var(--border-subtle); /* New variable recommended for very light borders */
  transition: background-color 0.2s ease, color 0.2s ease; /* Smooth transition */
  display: flex;
  gap: 0.75rem;
  align-items: flex-start;
}

.notificationItem:last-child {
  border-bottom: 0;
}

.notificationRead {
  /* Use background-secondary for read items, with slight variation if needed */
  background-color: var(--background-secondary);
  /* Use text-muted, which adapts */
  color: var(--text-muted);
}

.notificationUnread {
  /* Use background-secondary or a subtle variant for unread, which adapts */
  background-color: var(--background-secondary);
  /* Use text-primary, which adapts */
  color: var(--text-primary);
  /* Use primary-blue for accent, which adapts */
  border-left: 4px solid var(--primary-blue);
  padding-left: calc(1.25rem - 4px);
}

.notificationUnread:hover {
  /* Use background-muted for unread hover, which adapts */
  background-color: var(--background-muted);
}

.notificationContent {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  min-width: 0;
}

.notificationMessage {
  font-size: 0.9rem;
  line-height: 1.4;
  margin-bottom: 0.25rem;
  word-wrap: break-word;
  overflow-wrap: break-word;
  white-space: normal;
}

.notificationTimestamp {
  font-size: 0.75rem;
  /* Use text-muted, which adapts */
  color: var(--text-muted);
}

.markReadBtn {
  background: none;
  /* Use primary-blue for border, which adapts */
  border: 1px solid var(--primary-blue);
  cursor: pointer;
  flex-shrink: 0;
  font-size: 0.75rem;
  font-weight: 600;
  /* Use primary-blue for text, which adapts */
  color: var(--primary-blue);
  padding: 0.4rem 0.8rem;
  border-radius: 0.375rem;
  transition: background-color 0.15s ease, color 0.15s ease;
  align-self: center;
  white-space: nowrap;
}

.markReadBtn:hover {
  /* Use primary-blue for background, which adapts */
  background-color: var(--primary-blue);
  /* Use text-light, which adapts */
  color: var(--text-light);
}

/* --- No Notifications / Status Messages --- */
.noNotifications {
  padding: 1.5rem 1.25rem;
  font-size: 0.95rem;
  /* Use text-muted, which adapts */
  color: var(--text-muted);
  text-align: center;
  font-style: italic;
}

.notificationStatus {
  padding: 1.5rem;
  text-align: center;
  /* Use text-muted, which adapts */
  color: var(--text-muted);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.75rem;
  font-size: 0.95rem;
  font-weight: 500;
}

.notificationStatus .spinner {
  animation: spin 1s linear infinite;
  /* Use primary-blue, which adapts */
  color: var(--primary-blue);
}

.errorStatus {
  /* Use error-red, which adapts */
  color: var(--error-red);
  font-weight: 600;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* --- Clear All Button (in dropdown header) --- */
.clearAllBtn {
  background: none;
  border: none;
  cursor: pointer;
  font-weight: 600;
  /* Use primary-blue, which adapts */
  color: var(--primary-blue);
  font-size: 0.9rem;
  padding: 0.3rem 0.75rem;
  border-radius: 0.5rem;
  transition: background-color 0.2s ease, color 0.2s ease;
  display: flex;
  align-items: center;
  gap: 0.4rem;
  white-space: nowrap;
}

.clearAllBtn:hover:not(:disabled) {
  /* Use primary-blue-light for hover, which adapts */
  background-color: var(--primary-blue-light);
  /* Use primary-blue-dark for text on hover, which adapts */
  color: var(--primary-blue-dark);
}

.clearAllBtn:disabled {
  /* Use text-muted for disabled color, which adapts */
  color: var(--text-muted);
  cursor: not-allowed;
  background-color: transparent;
  opacity: 0.6;
}

/* --- Responsive Adjustments --- */

@media (max-width: 374px) {
  .headerContainer {
    padding: 0.75rem 1rem;
  }

  .greeting {
    font-size: 1.2rem;
  }

  .notificationsButton {
    padding: 0.5rem;
  }

  .menuButton {
    padding: 0.5rem;
  }
}