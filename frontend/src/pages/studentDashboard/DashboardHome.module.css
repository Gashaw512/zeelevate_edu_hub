/* DashboardHome.module.css */

/*
    Assuming 'index.css' is imported globally (e.g., in App.js or index.js)
    and its :root variables and body.dark-mode overrides are accessible.
    DO NOT @import url() for fonts here; ensure they are loaded globally.
*/

/* --- Dashboard Container --- */
.dashboardContainer {
  padding: 2.5rem;
  /* Use background-muted for dashboard background, which will adapt */
  background-color: var(--background-muted);
  /* Adjust based on your header height if fixed. header-height variable comes from global CSS. */
  min-height: calc(100vh - var(--header-height, 64px));
  border-radius: 1rem;
  /* Use shadow variable for consistency */
  box-shadow: 0 6px 20px var(--shadow-color-light);
  display: flex;
  flex-direction: column;
  gap: 2.5rem;
  /* Use text-primary for general body content, which will adapt */
  color: var(--text-primary);
  transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease; /* Smooth transitions */
}

/* --- Welcome Section --- */
.welcomeSection {
  /* Use background-secondary for cards/sections, which will adapt */
  background-color: var(--background-secondary);
  padding: 3rem;
  border-radius: 1.5rem;
  /* Use shadow variable for consistency */
  box-shadow: 0 8px 25px var(--shadow-color-light);
  border-bottom: 5px solid var(--primary-blue); /* Primary blue accent border */
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.25rem;
  transition: background-color 0.3s ease, box-shadow 0.3s ease; /* Smooth transitions */
}

.welcomeHeading {
  font-size: 2.8rem;
  font-weight: 800;
  /* Using a darker primary blue for heading emphasis, which will adapt */
  color: var(--primary-blue-dark);
  line-height: 1.2;
  margin: 0;
}

.userNameHighlight {
  /* Using primary blue for highlight to match branding, which will adapt */
  color: var(--primary-blue);
}

.welcomeSubtitle {
  font-size: 1.15rem;
  /* Using text-secondary for subtitles, which will adapt */
  color: var(--text-secondary);
  margin: 0;
}

.primaryActionButton {
  display: inline-flex;
  align-items: center;
  gap: 0.75rem;
  padding: 1.1rem 2.2rem;
  /* Use primary-blue, which will adapt */
  background-color: var(--primary-blue);
  /* Use text-light, which will adapt (white/light gray) */
  color: var(--text-light);
  border-radius: 0.75rem;
  text-decoration: none;
  font-weight: 600;
  font-size: 1.15rem;
  transition: background-color 0.2s ease-in-out, transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
  /* Use primary-blue for shadow with dynamic alpha for light/dark mode */
  box-shadow: 0 5px 15px var(--shadow-color-light-primary-action); /* New variable */
}

.primaryActionButton:hover {
  /* Use hover-blue, which will adapt */
  background-color: var(--hover-blue);
  transform: translateY(-4px);
  /* Use hover-blue for shadow with dynamic alpha for light/dark mode */
  box-shadow: 0 8px 20px var(--shadow-color-light-primary-action-hover); /* New variable */
}

/* --- Overview Cards Grid --- */
.cardsGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
}

@media (min-width: 768px) {
  .cardsGrid {
    grid-template-columns: repeat(auto-fit, minmax(290px, 1fr));
  }
}

@media (min-width: 1024px) {
  .cardsGrid {
    grid-template-columns: repeat(3, 1fr);
  }
}

/* --- Individual Card Styles --- */
.dashboardCard {
  /* Use background-secondary, which will adapt */
  background-color: var(--background-secondary);
  padding: 2.2rem;
  border-radius: 1.25rem;
  /* Use shadow variable for consistency */
  box-shadow: 0 4px 18px var(--shadow-color-light);
  /* Using border-light, which will adapt */
  border: 1px solid var(--border-light);
  transition: all 0.3s ease-in-out;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.dashboardCard:hover {
  /* Use shadow variable for consistency */
  box-shadow: 0 12px 35px var(--shadow-color-light-hover); /* New variable for hover shadow */
  transform: translateY(-0.6rem);
}

.cardHeader {
  display: flex;
  align-items: center;
  margin-bottom: 1.5rem;
}

.cardIconBlue {
  /* Use primary-blue, which will adapt */
  color: var(--primary-blue);
  margin-right: 1rem;
  flex-shrink: 0;
}

/* Renamed from cardIconIndigo to cardIconAccent for broader use as per your palette */
.cardIconAccent {
  /* Using primary-blue-dark as a strong accent, which will adapt */
  color: var(--primary-blue-dark);
  margin-right: 1rem;
  flex-shrink: 0;
}

.cardIconOrange {
  /* Keeping hardcoded #FFA500 for now. Consider adding --accent-orange to :root if used elsewhere. */
  color: var(--warning-orange); /* Changed to use warning-orange variable */
  margin-right: 1rem;
  flex-shrink: 0;
}

.cardTitle {
  font-size: 1.55rem;
  font-weight: 700;
  /* Use text-primary, which will adapt */
  color: var(--text-primary);
}

.cardValue {
  font-size: 3.2rem;
  font-weight: 800;
  /* Using primary-blue for values, which will adapt */
  color: var(--primary-blue);
  margin-bottom: 0.8rem;
  line-height: 1;
}

.cardDescription {
  /* Use text-secondary, which will adapt */
  color: var(--text-secondary);
  font-size: 0.98rem;
  line-height: 1.5;
  margin-bottom: 1.25rem;
}

.cardLink {
  display: inline-flex;
  align-items: center;
  /* Use primary-blue-dark for links, which will adapt */
  color: var(--primary-blue-dark);
  margin-top: auto;
  font-weight: 600;
  text-decoration: none;
  transition: color 0.2s ease-in-out, transform 0.2s ease-in-out;
  padding-top: 0.75rem;
}

.cardLink:hover {
  /* Use primary-blue on hover, which will adapt */
  color: var(--primary-blue);
  transform: translateX(0.35rem);
}

.linkIcon {
  margin-left: 0.4rem;
}

/* --- Latest Activity / Progress Section --- */
.latestActivitySection {
  /* Use background-secondary, which will adapt */
  background-color: var(--background-secondary);
  padding: 2.2rem;
  border-radius: 1.25rem;
  /* Use shadow variable for consistency */
  box-shadow: 0 4px 18px var(--shadow-color-light);
  /* Use border-light, which will adapt */
  border: 1px solid var(--border-light);
  transition: background-color 0.3s ease, box-shadow 0.3s ease; /* Smooth transitions */
}

.latestActivityTitle {
  font-size: 1.6rem;
  font-weight: 700;
  /* Use text-primary, which will adapt */
  color: var(--text-primary);
  margin-bottom: 1.75rem;
}

.activityList {
  display: flex;
  flex-direction: column;
  gap: 1.1rem;
}

.activityItem {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1.1rem 1.4rem;
  /* Use background-muted for activity items, which will adapt */
  background-color: var(--background-muted);
  border-radius: 0.8rem;
  /* Use border-light, which will adapt */
  border: 1px solid var(--border-light);
  transition: background-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.activityItem:hover {
  /* Use primary-blue-light for subtle hover, which will adapt */
  background-color: var(--primary-blue-light);
  /* Use shadow variable for consistency */
  box-shadow: 0 2px 10px var(--shadow-color-light);
}

.activityCourseTitle {
  font-weight: 600;
  /* Use text-primary, which will adapt */
  color: var(--text-primary);
  flex-grow: 1;
  min-width: 0;
  word-wrap: break-word;
}

.activityStatus {
  font-size: 0.88rem;
  font-weight: 600;
  padding: 0.35rem 0.7rem;
  border-radius: 0.5rem;
  margin-left: 1rem;
  margin-right: 0.75rem;
  text-transform: capitalize;
  flex-shrink: 0;
}

/* Specific status colors - now using variables or suggesting new ones */
.active {
  /* Consider adding --status-active-bg and --status-active-text to :root */
  background-color: var(--warning-orange); /* Use warning-orange */
  color: var(--text-primary); /* Adjust as needed for contrast */
}

.completed {
  /* Using indigo-light for completed background, which will adapt */
  background-color: var(--indigo-light);
  /* Using primary-blue-dark for completed text, which will adapt */
  color: var(--primary-blue-dark);
}

.unknown {
  /* Consider adding --status-unknown-bg and --status-unknown-text to :root */
  background-color: rgba(148, 163, 184, 0.15); /* Still hardcoded, add new variable */
  color: var(--cool-gray); /* Using cool-gray */
}

.pending {
  /* Consider adding --status-pending-bg and --status-pending-text to :root */
  background-color: rgba(255, 193, 7, 0.18); /* Still hardcoded, add new variable */
  color: #D97706; /* Still hardcoded, add new variable */
}

.activityLink {
  display: inline-flex;
  align-items: center;
  /* Use primary-blue, which will adapt */
  color: var(--primary-blue);
  text-decoration: none;
  font-weight: 500;
  transition: color 0.2s ease-in-out;
  flex-shrink: 0;
}

.activityLink:hover {
  /* Use primary-blue-dark, which will adapt */
  color: var(--primary-blue-dark);
}

/* --- Empty State Styling --- */
.emptyState {
  /* Use background-muted, which will adapt */
  background-color: var(--background-muted);
  padding: 2.5rem;
  border-radius: 1rem;
  text-align: center;
  /* Use text-secondary, which will adapt */
  color: var(--text-secondary);
  font-style: italic;
  /* Use border-light, which will adapt */
  border: 1px dashed var(--border-light);
}

.enrollNowButton {
  display: inline-block;
  margin-top: 1.8rem;
  padding: 0.9rem 2rem;
  /* Use primary-blue, which will adapt */
  background-color: var(--primary-blue);
  /* Use text-light, which will adapt */
  color: var(--text-light);
  border-radius: 0.75rem;
  text-decoration: none;
  font-weight: 600;
  transition: background-color 0.2s ease-in-out, transform 0.2s ease-in-out;
  /* Use primary-blue for shadow with dynamic alpha for light/dark mode */
  box-shadow: 0 3px 10px var(--shadow-color-light-primary-action); /* Reusing the primary action shadow */
}

.enrollNowButton:hover {
  /* Use hover-blue, which will adapt */
  background-color: var(--hover-blue);
  transform: translateY(-2px);
  /* Use hover-blue for shadow with dynamic alpha for light/dark mode */
  box-shadow: 0 5px 12px var(--shadow-color-light-primary-action-hover); /* Reusing the primary action hover shadow */
}

/* --- Quick Actions Section --- */
.quickActionsSection {
  /* Use background-secondary, which will adapt */
  background-color: var(--background-secondary);
  padding: 2.2rem;
  border-radius: 1.25rem;
  /* Use shadow variable for consistency */
  box-shadow: 0 4px 18px var(--shadow-color-light);
  /* Use border-light, which will adapt */
  border: 1px solid var(--border-light);
  transition: background-color 0.3s ease, box-shadow 0.3s ease; /* Smooth transitions */
}

.quickActionsTitle {
  font-size: 1.6rem;
  font-weight: 700;
  /* Use text-primary, which will adapt */
  color: var(--text-primary);
  margin-bottom: 1.75rem;
}

.quickActionsGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1.2rem;
}

@media (min-width: 640px) {
  .quickActionsGrid {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  }
}

.quickActionLink {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.4rem;
  /* Use background-muted, which will adapt */
  background-color: var(--background-muted);
  border-radius: 0.8rem;
  /* Use text-primary, which will adapt */
  color: var(--text-primary);
  text-decoration: none;
  transition: background-color 0.2s ease-in-out, transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
  font-weight: 500;
  /* Use border-light, which will adapt */
  border: 1px solid var(--border-light);
}

.quickActionLink:hover {
  /* Use indigo-light, which will adapt */
  background-color: var(--indigo-light);
  transform: translateY(-0.2rem);
  /* Use shadow variable for consistency */
  box-shadow: 0 5px 15px var(--shadow-color-light); /* Lighter shadow on hover */
}

.actionLinkIcon {
  margin-right: 0.8rem;
  /* Use primary-blue-dark for action icons, which will adapt */
  color: var(--primary-blue-dark);
}

/* --- Loading and Error States --- */
.fullPageStatusContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 80vh;
  /* Use background-muted, which will adapt */
  background-color: var(--background-muted);
  padding: 2rem;
  border-radius: 1rem;
  /* Use shadow variable for consistency */
  box-shadow: 0 4px 10px var(--shadow-color-light);
  /* Use text-primary, which will adapt */
  color: var(--text-primary);
  text-align: center;
  transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease; /* Smooth transitions */
}

.errorContainer {
  composes: fullPageStatusContainer;
  /* Use danger-red, which will adapt */
  background-color: var(--error-red); /* Changed from danger-red to error-red for consistency with global */
  /* Use text-light, which will adapt */
  color: var(--text-light);
  /* Explicit shadow for error, ensure a dark mode version if colors change */
  box-shadow: 0 8px 20px rgba(220, 53, 69, 0.3); /* This rgba will stay fixed as it's for error highlight */
  transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease;
}

.errorIcon {
  /* Use text-light, which will adapt */
  color: var(--text-light);
  margin-bottom: 1.2rem;
}

.errorHeading {
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 1rem;
  /* Use text-light, which will adapt */
  color: var(--text-light);
}

.errorText {
  /* Use text-light-alt, which will adapt */
  color: var(--text-light-alt);
  text-align: center;
  max-width: 600px;
  margin-bottom: 1.5rem;
  font-size: 1.1rem;
  margin-top: 1.5rem;
}

.retryButton {
  /* Use background-secondary (which is background-light from your original thought), will adapt */
  background-color: var(--background-secondary);
  /* Use error-red, which will adapt */
  color: var(--error-red); /* Changed from danger-red to error-red */
  padding: 0.8rem 1.6rem;
  border-radius: 0.75rem;
  font-weight: 600;
  transition: all 0.2s ease-in-out;
  border: none;
  cursor: pointer;
  /* Use shadow variable for consistency */
  box-shadow: 0 3px 8px var(--shadow-color-light);
}

.retryButton:hover {
  /* Use background-muted, which will adapt */
  background-color: var(--background-muted);
  /* Keep error-red for consistent visual cue */
  color: var(--error-red);
  transform: translateY(-2px);
  /* Use shadow variable for consistency */
  box-shadow: 0 5px 10px var(--shadow-color-light);
}

/* --- Responsive Adjustments (kept same as before) --- */
@media (max-width: 767px) {
  .dashboardContainer {
    padding: 1.5rem;
    gap: 1.5rem;
  }

  .welcomeSection {
    padding: 2rem;
  }

  .welcomeHeading {
    font-size: 2rem;
  }

  .welcomeSubtitle {
    font-size: 1rem;
  }

  .primaryActionButton {
    padding: 0.9rem 1.8rem;
    font-size: 1rem;
  }

  .cardHeader {
    flex-direction: column;
    align-items: flex-start;
    margin-bottom: 1rem;
  }

  .cardIconBlue,
  .cardIconAccent,
  .cardIconOrange {
    margin-right: 0;
    margin-bottom: 0.5rem;
  }

  .cardTitle {
    font-size: 1.3rem;
  }

  .cardValue {
    font-size: 2.5rem;
  }

  .cardDescription {
    font-size: 0.9rem;
  }

  .dashboardCard {
    padding: 1.5rem;
  }

  .latestActivityTitle,
  .quickActionsTitle {
    font-size: 1.4rem;
    margin-bottom: 1rem;
  }

  .activityItem {
    flex-wrap: wrap;
    justify-content: center;
    padding: 0.8rem 1rem;
    text-align: center;
  }

  .activityCourseTitle {
    width: 100%;
    margin-bottom: 0.5rem;
  }

  .activityStatus {
    margin-left: 0.5rem;
    margin-right: 0.5rem;
  }

  .activityLink {
    width: 100%;
    justify-content: center;
    margin-top: 0.75rem;
  }

  .quickActionLink {
    padding: 1rem;
    flex-direction: column;
    text-align: center;
  }

  .quickActionLink span {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 0.5rem;
  }

  .actionLinkIcon {
    margin-right: 0.5rem;
    margin-bottom: 0;
  }

  .quickActionLink svg:last-child {
    margin-top: 0.5rem;
  }
}

@media (max-width: 480px) {
  .dashboardContainer {
    padding: 1rem;
    gap: 1.2rem;
  }

  .welcomeSection {
    padding: 1.5rem;
  }

  .welcomeHeading {
    font-size: 1.8rem;
  }

  .welcomeSubtitle {
    font-size: 0.95rem;
  }

  .primaryActionButton {
    padding: 0.8rem 1.5rem;
    font-size: 0.9rem;
  }

  .cardTitle {
    font-size: 1.2rem;
  }

  .cardValue {
    font-size: 2.2rem;
  }

  .dashboardCard {
    padding: 1.2rem;
  }

  .latestActivityTitle,
  .quickActionsTitle {
    font-size: 1.25rem;
  }

  .activityItem {
    padding: 0.7rem 0.8rem;
  }

  .quickActionLink {
    padding: 0.8rem;
    font-size: 0.9rem;
  }
}